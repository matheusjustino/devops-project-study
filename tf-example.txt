terraform {
  required_providers {
    digitalocean = {
        source = "digitalocean/digitalocean"
    }
	aws = {
		source = "hashicorp/aws",
		version = "~> 4.0"
	}
  }
}

# DIGITALOCEAN RESOURCES

variable "do_token" {
  type = string
  default = "" # digital ocean api token
  sensitive = true
}

variable "cluster_name" {
  type = string
  default = "devops-project-study"
}

variable "k8s_version" {
  type = string
  default = "1.29.0-do.0"
}

variable "region" {
  type = string
  default = "syd1" # Sydney
}

provider "digitalocean" {
  token = var.do_token
}

resource "digitalocean_kubernetes_cluster" "devops-project-study" {
  name = var.cluster_name
  region = var.region
  version = var.k8s_version

  node_pool {
    name = "worker-pool"
    size = "s-2vcpu-4gb"
    auto_scale = false
    node_count = 1
  }
}

#AWS RESOURCES

provider "aws" {
	region     = ""
	access_key = ""
	secret_key = ""
}

// To Generate Private Key
resource "tls_private_key" "rsa_4096" {
	algorithm = "RSA"
	rsa_bits  = 4096
}

variable "key_name" {
	description = "Name of the SSH key pair"
}

// Create Key Pair for Connecting EC2 via SSH
resource "aws_key_pair" "key_pair" {
	key_name   = var.key_name
	public_key = tls_private_key.rsa_4096.public_key_openssh
}

// Save PEM file locally
resource "local_file" "private_key" {
	content  = tls_private_key.rsa_4096.private_key_pem
	filename = var.key_name
}


# Create a security group
resource "aws_security_group" "desafio_npl" {
	name        = "desafio_npl"
	description = "Security group for EC2"

	ingress {
		from_port   = 0
		to_port     = 0
		protocol    = "-1"
		cidr_blocks = ["0.0.0.0/0"]
	}

	egress {
		from_port   = 0
		to_port     = 0
		protocol    = "-1"
		cidr_blocks = ["0.0.0.0/0"]
	}
}

resource "aws_instance" "public_instance" {
	ami                    = "ami-04f5097681773b989" #amz linux 083327d0fe6d65178 ubuntu 04f5097681773b989
	instance_type          = "t2.medium"
	key_name               = aws_key_pair.key_pair.key_name
	vpc_security_group_ids = [aws_security_group.desafio_npl.id]

	tags = {
		Name = "desafio-npl"
	}

	root_block_device {
		volume_size = 20
		volume_type = "gp2"
	}
}
